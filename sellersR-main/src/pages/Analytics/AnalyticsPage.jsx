import { useState, useEffect, useCallback } from 'react';
import { Link } from 'react-router-dom';
import { LineChart, Line, AreaChart, Area, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, ScatterChart, Scatter } from 'recharts';
import axios from 'axios';
import './AnalyticsPage.css';

const AnalyticsPage = () => {
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');
  const [hasSubscription, setHasSubscription] = useState(false);
  const [hasApiKey, setHasApiKey] = useState(false);
  const [activeTab, setActiveTab] = useState('financial');
  const [viewMode, setViewMode] = useState('chart');
  const [apiKeyInput, setApiKeyInput] = useState('');
  const [apiKeySaving, setApiKeySaving] = useState(false);
  const [apiKeySuccess, setApiKeySuccess] = useState('');
  const [apiKeyError, setApiKeyError] = useState('');
  const [analyticsData, setAnalyticsData] = useState({
    financial: null,
    'unit-economics': null,
    advertising: null,
    'abc-analysis': null
  });
  const [lastFetchTime, setLastFetchTime] = useState({
    financial: 0,
    'unit-economics': 0,
    advertising: 0,
    'abc-analysis': 0
  });
  const [isRequestInProgress, setIsRequestInProgress] = useState(false);

  const MIN_FETCH_INTERVAL = 30000; // 30 —Å–µ–∫—É–Ω–¥ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
  const COLORS = ['#48DD00', '#9F3ED5', '#E6399B', '#52A529', '#AD66D5'];

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ API –∫–ª—é—á–∞
  const checkSubscriptionAndLoadData = useCallback(async () => {
    try {
      const token = localStorage.getItem('token');
      if (!token) {
        setError('–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è');
        setLoading(false);
        return;
      }
      
      // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ axios interceptor
      const config = {};
      
      const subscriptionResponse = await axios.get('/api/subscription/info', config);
      
      if (subscriptionResponse.data.success && subscriptionResponse.data.hasSubscription) {
        setHasSubscription(true);
        
        const userData = JSON.parse(localStorage.getItem('user') || '{}');
        const apiKeyResponse = await axios.get('/api/auth/api-key', {
          ...config,
          params: { email: userData.email }
        });
        
        if (apiKeyResponse.data.success && apiKeyResponse.data.hasApiKey) {
          setHasApiKey(true);
          loadAnalyticsData(activeTab);
        }
      } else {
        setHasSubscription(false);
        loadAnalyticsData(activeTab);
      }
    } catch (err) {
      console.error('Error checking requirements:', err);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ API –∫–ª—é—á–∞');
      loadAnalyticsData(activeTab);
    } finally {
      setLoading(false);
    }
  }, [activeTab]);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
  const loadAnalyticsData = useCallback(async (tab) => {
    console.log('üöÄ Starting loadAnalyticsData for tab:', tab);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ—à - –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —Å–≤–µ–∂–∏–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
    const now = Date.now();
    const lastFetch = lastFetchTime[tab] || 0;
    if (now - lastFetch < MIN_FETCH_INTERVAL && analyticsData[tab]) {
      console.log('üì¶ Using cached data for tab:', tab);
      return;
    }
    
    // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –µ—Å–ª–∏ —É–∂–µ –∑–∞–≥—Ä—É–∂–∞–µ–º, –Ω–µ –¥–µ–ª–∞–µ–º –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    if (loading) {
      console.log('‚ö†Ô∏è Already loading, skipping');
      return;
    }
    
    setLoading(true);
    setError(''); // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –µ—â–µ —Ä–∞–∑ –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º
      const token = localStorage.getItem('token');
      if (!token) {
        setError('–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.');
        setLoading(false);
        return;
      }
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç –∏ –º–µ—Ç–æ–¥
      let endpoint = '';
      let method = 'GET';
      let requestConfig = {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      };
      
      console.log('üîê Manually setting Authorization header:', `Bearer ${token.substring(0, 20)}...`);
      
      switch (tab) {
        case 'financial':
          endpoint = '/api/analytics/financial';
          requestConfig.params = { days: 30 };
          break;
        case 'unit-economics':
          endpoint = '/api/analytics/unit-economics';
          method = 'POST';
          requestConfig.params = { days: 30 };
          break;
        case 'advertising':
          endpoint = '/api/analytics/advertising-campaigns';
          method = 'POST';
          requestConfig.params = { days: 7 };
          break;
        case 'abc-analysis':
          endpoint = '/api/analytics/abc-analysis';
          break;
        default:
          endpoint = `/api/analytics/${tab}`;
      }
      
      console.log('üì° Making request to:', endpoint);
      console.log('üîç Request config:', requestConfig);
      console.log('üîç Request method:', method);
      
      // üîç –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –û–¢–õ–ê–î–ö–ê
      console.log('üéØ BEFORE axios call - URL:', `${axios.defaults.baseURL}${endpoint}`);
      console.log('üéØ BEFORE axios call - Full config:', JSON.stringify(requestConfig, null, 2));
      
      let response;
      if (method === 'POST') {
        console.log('üéØ Calling axios.POST...');
        response = await axios.post(endpoint, {}, requestConfig);
      } else {
              console.log('üéØ Calling axios.GET...');
      
      // üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–¢–õ–ê–î–ö–ê - –¥–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π header
      const uniqueId = Date.now() + Math.random();
      const testConfig = {
        ...requestConfig,
        headers: {
          ...requestConfig.headers,
          'X-Frontend-Request-ID': uniqueId,
          'X-Debug-Source': 'analytics-page',
          'Cache-Control': 'no-cache, no-store, must-revalidate',
          'Pragma': 'no-cache',
          'Expires': '0'
        },
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±—Ö–æ–¥–∏–º –∫–µ—à
        params: {
          ...requestConfig.params,
          '_t': Date.now(), // timestamp –¥–ª—è bypass –∫–µ—à–∞
          '_bypass': uniqueId // —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
        }
      };
      
      console.log('üö® CRITICAL DEBUG - Request ID:', uniqueId);
      console.log('üö® Final request config:', JSON.stringify(testConfig, null, 2));
      console.log('üö® Going to:', `${axios.defaults.baseURL}${endpoint}`);
      
      // üß™ –¢–ï–°–¢: –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞—à —Ç–µ—Å—Ç–æ–≤—ã–π endpoint
      if (endpoint === '/api/analytics/financial') {
        console.log('üß™ TESTING DEBUG ENDPOINT FIRST...');
        try {
          const debugResponse = await axios.get('/api/analytics/debug-test', {
            headers: {
              'X-Frontend-Request-ID': uniqueId + '_DEBUG',
              'X-Debug-Source': 'test-call'
            }
          });
          console.log('üß™ DEBUG ENDPOINT RESPONSE:', debugResponse.data);
          console.log('üß™ DEBUG ENDPOINT SERVER:', debugResponse.data?.server);
        } catch (err) {
          console.error('üß™ DEBUG ENDPOINT FAILED:', err);
        }
      }
      
      response = await axios.get(endpoint, testConfig);
      }
      
      console.log('üéØ AFTER axios call - Response headers:', response.headers);
      console.log('üéØ AFTER axios call - Response config URL:', response.config.url);
      
      console.log('üì¶ Response received:', response.status, response.data?.success);
      
      // üîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –û–¢–í–ï–¢–ê
      console.log('üîç Response data keys:', Object.keys(response.data || {}));
      console.log('üîç Response data sample:', JSON.stringify(response.data, null, 2).substring(0, 500) + '...');
      console.log('üîç Response server/source headers:', {
        server: response.headers.server,
        'x-powered-by': response.headers['x-powered-by'],
        'content-type': response.headers['content-type'],
        'cache-control': response.headers['cache-control']
      });
      
      // üö® –ü–†–û–í–ï–†–Ø–ï–ú –ò–°–¢–û–ß–ù–ò–ö –î–ê–ù–ù–´–•
      console.log('üö® MOCK DATA DETECTION:');
      console.log('üö® - Response has server header?', !!response.headers.server);
      console.log('üö® - Response came from network?', response.request ? 'YES' : 'NO');
      console.log('üö® - Response config valid?', !!response.config);
      console.log('üö® - Data looks like mock?', 
        response.data?.success === true && 
        response.data?.data?.summary?.totalSales === 0 &&
        response.data?.data?.weeks?.length > 0
      );
      console.log('üö® - First week date matches today?', response.data?.data?.weeks?.[0]?.date === new Date().toISOString().split('T')[0]);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø—Ä–∏–∑–Ω–∞–∫–∏ mock –¥–∞–Ω–Ω—ã—Ö
      if (!response.headers.server && !response.headers['x-powered-by']) {
        console.warn('‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è SUSPICIOUS: No server headers - likely MOCK DATA!');
      }
      
      if (response.data?.success) {
        let processedData = response.data.data;
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–∫–ª–∞–º—ã
        if (tab === 'advertising' && processedData && Array.isArray(processedData) && !processedData.campaigns) {
          processedData = { campaigns: processedData };
        }
        
        setAnalyticsData(prev => ({
          ...prev,
          [tab]: processedData
        }));
        
        setLastFetchTime(prev => ({
          ...prev,
          [tab]: Date.now()
        }));
        
        console.log('‚úÖ Data loaded successfully for tab:', tab);
      } else {
        console.log('‚ùå Response not successful:', response.data);
        setError(response.data?.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
      }
    } catch (err) {
      console.error('‚ùå Request failed:', err);
      
      if (err.response?.status === 400 && err.response?.data?.message?.includes('API –∫–ª—é—á')) {
        setError('–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å API –∫–ª—é—á Wildberries –≤ –ø—Ä–æ—Ñ–∏–ª–µ');
      } else if (err.response?.status === 401) {
        setError('–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
      } else {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ' + (err.response?.data?.message || err.message));
      }
    } finally {
      setLoading(false);
    }
  }, [loading, analyticsData, lastFetchTime]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è API –∫–ª—é—á–∞
  const handleSaveApiKey = async (e) => {
    e.preventDefault();
    setApiKeySaving(true);
    setApiKeyError('');
    setApiKeySuccess('');
    
    try {
      const userData = JSON.parse(localStorage.getItem('user') || '{}');
      const token = localStorage.getItem('token');
      const userEmail = userData.email;
      
      if (!userEmail || !token) {
        setApiKeyError('–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ API –∫–ª—é—á–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è');
        return;
      }
      
      const response = await axios.post('/api/auth/set-api-key', {
        apiKey: apiKeyInput
      }, {
        params: { email: userEmail }
      });
      
      if (response.data.success) {
        setApiKeySuccess(response.data.message || 'API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω');
        setHasApiKey(true);
        setApiKeyInput('');
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è API –∫–ª—é—á–∞
        console.log('API key saved successfully, reloading data for tab:', activeTab);
        setTimeout(() => {
          loadAnalyticsData(activeTab);
        }, 100);
      } else {
        setApiKeyError(response.data.message || '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è API –∫–ª—é—á–∞');
      }
    } catch (err) {
      console.error('Error saving API key:', err);
      setApiKeyError(err.response?.data?.message || '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è API –∫–ª—é—á–∞');
    } finally {
      setApiKeySaving(false);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã –≤–∫–ª–∞–¥–∫–∏
  const handleTabChange = (tab) => {
    setActiveTab(tab);
  };

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –≥—Ä–∞—Ñ–∏–∫–æ–≤
  const renderFinancialCharts = () => {
    if (!analyticsData.financial?.weeks) return null;
    
    const data = analyticsData.financial.weeks.map(week => ({
      name: `–ù–µ–¥–µ–ª—è ${week.week}`,
      sales: week.salesWb,
      profit: week.netProfit,
      logistics: week.logistics,
      storage: week.storage
    }));

    return (
      <div className="charts-container">
        <div className="chart-description">
          <h2>üìä –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç</h2>
          <p>–ê–Ω–∞–ª–∏–∑ –¥–∏–Ω–∞–º–∏–∫–∏ –ø—Ä–æ–¥–∞–∂ –∏ –ø—Ä–∏–±—ã–ª–∏ –ø–æ –Ω–µ–¥–µ–ª—è–º. –ó–µ–ª–µ–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±—â–∏–π –æ–±—ä–µ–º –ø—Ä–æ–¥–∞–∂, —Ñ–∏–æ–ª–µ—Ç–æ–≤–∞—è - —á–∏—Å—Ç—É—é –ø—Ä–∏–±—ã–ª—å –ø–æ—Å–ª–µ –≤—Å–µ—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤.</p>
        </div>
        <div className="chart-wrapper">
          <h3>–î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ –∏ –ø—Ä–∏–±—ã–ª–∏</h3>
          <ResponsiveContainer width="100%" height={300}>
            <AreaChart data={data}>
              <defs>
                <linearGradient id="colorSales" x1="0" y1="0" x2="0" y2="1">
                  <stop offset="5%" stopColor="#48DD00" stopOpacity={0.3}/>
                  <stop offset="95%" stopColor="#48DD00" stopOpacity={0}/>
                </linearGradient>
                <linearGradient id="colorProfit" x1="0" y1="0" x2="0" y2="1">
                  <stop offset="5%" stopColor="#9F3ED5" stopOpacity={0.3}/>
                  <stop offset="95%" stopColor="#9F3ED5" stopOpacity={0}/>
                </linearGradient>
              </defs>
              <CartesianGrid strokeDasharray="3 3" stroke="rgba(255,255,255,0.1)" />
              <XAxis dataKey="name" stroke="rgba(255,255,255,0.6)" fontSize={12} />
              <YAxis stroke="rgba(255,255,255,0.6)" fontSize={12} />
              <Tooltip contentStyle={{ backgroundColor: '#000037', border: '1px solid rgba(255,255,255,0.2)', borderRadius: '8px' }} />
              <Area type="monotone" dataKey="sales" stroke="#48DD00" strokeWidth={3} fillOpacity={1} fill="url(#colorSales)" name="–ü—Ä–æ–¥–∞–∂–∏ (‚ÇΩ)" />
              <Area type="monotone" dataKey="profit" stroke="#9F3ED5" strokeWidth={3} fillOpacity={1} fill="url(#colorProfit)" name="–ü—Ä–∏–±—ã–ª—å (‚ÇΩ)" />
            </AreaChart>
          </ResponsiveContainer>
        </div>
      </div>
    );
  };

  const renderUnitEconomicsCharts = () => {
    if (!analyticsData['unit-economics']?.items) return null;
    
    const topProducts = [...analyticsData['unit-economics'].items]
      .sort((a, b) => b.finalMarginality - a.finalMarginality)
      .slice(0, 10);
    
    const marginData = topProducts.map(item => ({
      name: item.vendorCode,
      margin: item.finalMarginality,
      profit: item.grossProfitFinal,
      roi: item.roi
    }));
    
    return (
      <div className="charts-container">
        <div className="chart-description">
          <h2>üßÆ –Æ–Ω–∏—Ç-—ç–∫–æ–Ω–æ–º–∏–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤</h2>
          <p>–ê–Ω–∞–ª–∏–∑ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤. –ó–µ–ª–µ–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –º–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å (%), —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–µ - –≤–æ–∑–≤—Ä–∞—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π (ROI). –ü–æ–º–æ–≥–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–∞–º—ã–µ –≤—ã–≥–æ–¥–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã.</p>
        </div>
        <div className="chart-wrapper">
          <h3>–¢–æ–ø-10 —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –º–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç–∏</h3>
          <ResponsiveContainer width="100%" height={300}>
            <BarChart data={marginData}>
              <CartesianGrid strokeDasharray="3 3" stroke="rgba(255,255,255,0.1)" />
              <XAxis dataKey="name" stroke="rgba(255,255,255,0.6)" fontSize={12} />
              <YAxis stroke="rgba(255,255,255,0.6)" fontSize={12} />
              <Tooltip contentStyle={{ backgroundColor: '#000037', border: '1px solid rgba(255,255,255,0.2)', borderRadius: '8px' }} />
              <Bar dataKey="margin" fill="#48DD00" name="–ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å (%)" />
              <Bar dataKey="roi" fill="#9F3ED5" name="ROI (%)" />
            </BarChart>
          </ResponsiveContainer>
        </div>
      </div>
    );
  };

  const renderAdvertisingCharts = () => {
    console.log('Rendering advertising charts, data:', analyticsData.advertising);
    
    if (!analyticsData.advertising?.campaigns || analyticsData.advertising.campaigns.length === 0) {
      return (
        <div className="no-data">
          <div className="no-data-icon">üì¢</div>
          <h3>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ —Ä–µ–∫–ª–∞–º–µ</h3>
          <p>–†–µ–∫–ª–∞–º–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã</p>
        </div>
      );
    }
    
    const data = analyticsData.advertising.campaigns.map(campaign => ({
      name: campaign.campaignName || campaign.vendorCode || `–ö–∞–º–ø–∞–Ω–∏—è ${campaign.campaignId}`,
      spend: Number(campaign.totalSpend) || 0,
      revenue: Number(campaign.totalRevenue) || 0,
      roas: Number(campaign.roas) || 0,
      clicks: Number(campaign.clicks) || 0
    }));
    
    return (
      <div className="charts-container">
        <div className="chart-description">
          <h2>üì¢ –†–µ–∫–ª–∞–º–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏</h2>
          <p>–ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π. –ó–µ–ª–µ–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É, —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–µ - –ø–æ–ª—É—á–µ–Ω–Ω—É—é –≤—ã—Ä—É—á–∫—É. ROAS –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–æ–∑–≤—Ä–∞—Ç —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π.</p>
        </div>
        <div className="chart-wrapper">
          <h3>–†–∞—Å—Ö–æ–¥—ã –∏ –≤—ã—Ä—É—á–∫–∞ –ø–æ –∫–∞–º–ø–∞–Ω–∏—è–º</h3>
          <ResponsiveContainer width="100%" height={300}>
            <BarChart data={data}>
              <CartesianGrid strokeDasharray="3 3" stroke="rgba(255,255,255,0.1)" />
              <XAxis dataKey="name" stroke="rgba(255,255,255,0.6)" fontSize={12} />
              <YAxis stroke="rgba(255,255,255,0.6)" fontSize={12} />
              <Tooltip contentStyle={{ backgroundColor: '#000037', border: '1px solid rgba(255,255,255,0.2)', borderRadius: '8px' }} />
              <Bar dataKey="spend" fill="#E6399B" name="–ó–∞—Ç—Ä–∞—Ç—ã (‚ÇΩ)" />
              <Bar dataKey="revenue" fill="#48DD00" name="–í—ã—Ä—É—á–∫–∞ (‚ÇΩ)" />
            </BarChart>
          </ResponsiveContainer>
        </div>
      </div>
    );
  };

  const renderABCAnalysisCharts = () => {
    if (!analyticsData['abc-analysis']) return null;
    
    const { classA, classB, classC } = analyticsData['abc-analysis'].summary;
    const pieData = [
      { name: '–ö–ª–∞—Å—Å A (80% –≤—ã—Ä—É—á–∫–∏)', value: classA.percent, color: '#48DD00' },
      { name: '–ö–ª–∞—Å—Å B (15% –≤—ã—Ä—É—á–∫–∏)', value: classB.percent, color: '#9F3ED5' },
      { name: '–ö–ª–∞—Å—Å C (5% –≤—ã—Ä—É—á–∫–∏)', value: classC.percent, color: '#E6399B' }
    ];
    
    return (
      <div className="charts-container">
        <div className="chart-description">
          <h2>üìã ABC-–∞–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–æ–≤</h2>
          <p>–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É –ü–∞—Ä–µ—Ç–æ. –ö–ª–∞—Å—Å A - —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (80% –≤—ã—Ä—É—á–∫–∏), –∫–ª–∞—Å—Å B - —Å—Ä–µ–¥–Ω–∏–µ (15%), –∫–ª–∞—Å—Å C - –Ω–∞–∏–º–µ–Ω–µ–µ –≤–∞–∂–Ω—ã–µ (5%). –ü–æ–º–æ–≥–∞–µ—Ç —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ç–æ–≤–∞—Ä–∞—Ö.</p>
        </div>
        <div className="chart-wrapper">
          <h3>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—ã—Ä—É—á–∫–∏ –ø–æ –∫–ª–∞—Å—Å–∞–º</h3>
          <ResponsiveContainer width="100%" height={300}>
            <PieChart>
              <Pie
                data={pieData}
                cx="50%"
                cy="50%"
                outerRadius={100}
                fill="#8884d8"
                dataKey="value"
                label={({ name, value }) => `${name}: ${value.toFixed(1)}%`}
              >
                {pieData.map((entry, index) => (
                  <Cell key={`cell-${index}`} fill={entry.color} />
                ))}
              </Pie>
              <Tooltip contentStyle={{ backgroundColor: '#000037', border: '1px solid rgba(255,255,255,0.2)', borderRadius: '8px' }} />
            </PieChart>
          </ResponsiveContainer>
        </div>
      </div>
    );
  };

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Ç–∞–±–ª–∏—Ü
  const renderFinancialTable = () => {
    if (!analyticsData.financial?.weeks) {
      return null;
    }
    
    return (
      <div className="financial-report table-container">
        <h2>üìä –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç</h2>
        <div className="table-scroll">
          <table>
            <thead>
              <tr>
                <th>–ù–µ–¥–µ–ª—è</th>
                <th>–î–∞—Ç–∞</th>
                <th>–í—ã–∫—É–ø –®–¢</th>
                <th>–ü—Ä–æ–¥–∞–∂–∏ –í–ë</th>
                <th>–ö –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—é –∑–∞ —Ç–æ–≤–∞—Ä</th>
                <th>–õ–æ–≥–∏—Å—Ç–∏–∫–∞</th>
                <th>–•—Ä–∞–Ω–µ–Ω–∏–µ</th>
                <th>–ü—Ä–∏–µ–º–∫–∞</th>
                <th>–®—Ç—Ä–∞—Ñ</th>
                <th>–£–¥–µ—Ä–∂–∞–Ω–∏—è/—Ä–µ–∫–ª–∞–º–∞</th>
                <th>–ö –≤—ã–ø–ª–∞—Ç–µ</th>
                <th>–ù–∞–ª–æ–≥</th>
                <th>–ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã</th>
                <th>–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞</th>
                <th>–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å</th>
                <th>–î–†–†</th>
              </tr>
            </thead>
            <tbody>
              {analyticsData.financial.weeks.map((week, index) => (
                <tr key={index}>
                  <td>{week.week}</td>
                  <td>{week.date}</td>
                  <td>{week.buyoutQuantity?.toLocaleString() || 0}</td>
                  <td>{week.salesWb?.toLocaleString() || 0} ‚ÇΩ</td>
                  <td>{week.toCalculateForGoods?.toLocaleString() || 0} ‚ÇΩ</td>
                  <td>{week.logistics?.toLocaleString() || 0} ‚ÇΩ</td>
                  <td>{week.storage?.toLocaleString() || 0} ‚ÇΩ</td>
                  <td>{week.acceptance?.toLocaleString() || 0} ‚ÇΩ</td>
                  <td>{week.penalty?.toLocaleString() || 0} ‚ÇΩ</td>
                  <td>{week.retentions?.toLocaleString() || 0} ‚ÇΩ</td>
                  <td>{week.toPay?.toLocaleString() || 0} ‚ÇΩ</td>
                  <td>{week.tax?.toLocaleString() || 0} ‚ÇΩ</td>
                  <td>{week.otherExpenses?.toLocaleString() || 0} ‚ÇΩ</td>
                  <td>{week.costOfGoodsSold?.toLocaleString() || 0} ‚ÇΩ</td>
                  <td className={week.netProfit > 0 ? 'profit-positive' : 'profit-negative'}>{week.netProfit?.toLocaleString() || 0} ‚ÇΩ</td>
                  <td>{week.drr?.toFixed(2) || 0}%</td>
                </tr>
              ))}
            </tbody>
            {analyticsData.financial.totals && (
              <tfoot>
                <tr className="totals-row">
                  <td><strong>–ò—Ç–æ–≥–æ:</strong></td>
                  <td>-</td>
                  <td><strong>{analyticsData.financial.totals.totalBuyoutQuantity}</strong></td>
                  <td><strong>{analyticsData.financial.totals.totalSalesWb} ‚ÇΩ</strong></td>
                  <td><strong>{analyticsData.financial.totals.totalToCalculateForGoods} ‚ÇΩ</strong></td>
                  <td><strong>{analyticsData.financial.totals.totalLogistics} ‚ÇΩ</strong></td>
                  <td><strong>{analyticsData.financial.totals.totalStorage} ‚ÇΩ</strong></td>
                  <td><strong>{analyticsData.financial.totals.totalAcceptance} ‚ÇΩ</strong></td>
                  <td><strong>{analyticsData.financial.totals.totalPenalty} ‚ÇΩ</strong></td>
                  <td><strong>{analyticsData.financial.totals.totalRetentions} ‚ÇΩ</strong></td>
                  <td><strong>{analyticsData.financial.totals.totalToPay} ‚ÇΩ</strong></td>
                  <td><strong>{analyticsData.financial.totals.totalTax} ‚ÇΩ</strong></td>
                  <td><strong>{analyticsData.financial.totals.totalOtherExpenses} ‚ÇΩ</strong></td>
                  <td><strong>{analyticsData.financial.totals.totalCostOfGoodsSold} ‚ÇΩ</strong></td>
                  <td className={analyticsData.financial.totals.totalNetProfit > 0 ? 'profit-positive' : 'profit-negative'}>
                    <strong>{analyticsData.financial.totals.totalNetProfit} ‚ÇΩ</strong>
                  </td>
                  <td><strong>{analyticsData.financial.totals.avgDrr}%</strong></td>
                </tr>
              </tfoot>
            )}
          </table>
        </div>
      </div>
    );
  };

  const renderUnitEconomicsTable = () => {
    if (!analyticsData['unit-economics']?.items) return null;
    
    return (
      <div className="unit-economics table-container">
        <h2>üßÆ –Æ–Ω–∏—Ç —ç–∫–æ–Ω–æ–º–∏–∫–∞ –í–ë</h2>
        <div className="table-scroll">
          <table>
            <thead>
              <tr>
                <th>–ê—Ä—Ç–∏–∫—É–ª –í–ë</th>
                <th>–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞</th>
                <th>–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å</th>
                <th>–¶–µ–Ω–∞ –¥–æ –°–ü–ü</th>
                <th>% –°–ü–ü</th>
                <th>–¶–µ–Ω–∞ –ø–æ—Å–ª–µ –°–ü–ü</th>
                <th>–í—ã–∫—É–ø %</th>
                <th>–ö–æ–º–∏—Å—Å–∏—è –ú–ü %</th>
                <th>–õ–æ–≥–∏—Å—Ç–∏–∫–∞ –ú–ü</th>
                <th>–•—Ä–∞–Ω–µ–Ω–∏–µ –ú–ü</th>
                <th>–ù–∞–ª–æ–≥</th>
                <th>–í—ã—Ä—É—á–∫–∞ –ø–æ—Å–ª–µ –Ω–∞–ª–æ–≥–∞</th>
                <th>–í–∞–ª–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å</th>
                <th>–ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å</th>
                <th>ROI</th>
                <th>ROM</th>
              </tr>
            </thead>
            <tbody>
              {analyticsData['unit-economics'].items.map((item, index) => (
                <tr key={index}>
                  <td>{item.nmId}</td>
                  <td>{item.vendorCode}</td>
                  <td>{item.costPrice} ‚ÇΩ</td>
                  <td>{item.priceBeforeSpp} ‚ÇΩ</td>
                  <td>{item.sppPercent}%</td>
                  <td>{item.priceAfterSpp} ‚ÇΩ</td>
                  <td>{item.buyout}%</td>
                  <td>{item.mpCommissionPercent}%</td>
                  <td>{item.logisticsMp} ‚ÇΩ</td>
                  <td>{item.storageMp} ‚ÇΩ</td>
                  <td>{item.tax} ‚ÇΩ</td>
                  <td>{item.revenueAfterTax} ‚ÇΩ</td>
                  <td className={item.grossProfitFinal > 0 ? 'profit-positive' : 'profit-negative'}>{item.grossProfitFinal} ‚ÇΩ</td>
                  <td>{item.finalMarginality.toFixed(1)}%</td>
                  <td>{item.roi.toFixed(1)}%</td>
                  <td>{item.rom.toFixed(1)}%</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    );
  };

  const renderAdvertisingTable = () => {
    console.log('Rendering advertising table, data:', analyticsData.advertising);
    
    if (!analyticsData.advertising?.campaigns || analyticsData.advertising.campaigns.length === 0) {
      return (
        <div className="no-data">
          <div className="no-data-icon">üì¢</div>
          <h3>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ —Ä–µ–∫–ª–∞–º–µ</h3>
          <p>–†–µ–∫–ª–∞–º–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã</p>
        </div>
      );
    }
    
    return (
      <div className="advertising table-container">
        <h2>üì¢ –†–µ–∫–ª–∞–º–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏</h2>
        <div className="table-scroll">
          <table>
            <thead>
              <tr>
                <th>ID –∫–∞–º–ø–∞–Ω–∏–∏</th>
                <th>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏</th>
                <th>–¢–∏–ø</th>
                <th>–°—Ç–∞—Ç—É—Å</th>
                <th>–ó–∞—Ç—Ä–∞—Ç—ã</th>
                <th>–í—ã—Ä—É—á–∫–∞</th>
                <th>–ö–ª–∏–∫–∏</th>
                <th>–ü–æ–∫–∞–∑—ã</th>
                <th>CTR</th>
                <th>CPC</th>
                <th>CR</th>
                <th>ROAS</th>
              </tr>
            </thead>
            <tbody>
              {analyticsData.advertising.campaigns.map((campaign, index) => (
                <tr key={index}>
                  <td>{campaign.campaignId || '-'}</td>
                  <td>{campaign.campaignName || `–ö–∞–º–ø–∞–Ω–∏—è ${campaign.campaignId || index + 1}`}</td>
                  <td>{campaign.campaignType || '–ù–µ —É–∫–∞–∑–∞–Ω'}</td>
                  <td><span className={`status-${(campaign.status || 'unknown').toLowerCase()}`}>{campaign.status || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</span></td>
                  <td className="currency-value">
                    <span className="formatted-number">{Number(campaign.totalSpend || 0).toLocaleString('ru-RU', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span> ‚ÇΩ
                  </td>
                  <td className="currency-value">
                    <span className="formatted-number">{Number(campaign.totalRevenue || 0).toLocaleString('ru-RU', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span> ‚ÇΩ
                  </td>
                  <td className="numeric-value">
                    <span className="formatted-number">{Number(campaign.clicks || 0).toLocaleString('ru-RU')}</span>
                  </td>
                  <td className="numeric-value">
                    <span className="formatted-number">{Number(campaign.impressions || 0).toLocaleString('ru-RU')}</span>
                  </td>
                  <td className="percentage-value">
                    <span className="formatted-number">{Number(campaign.ctr || 0).toFixed(2)}</span>%
                  </td>
                  <td className="currency-value">
                    <span className="formatted-number">{Number(campaign.cpc || 0).toFixed(2)}</span> ‚ÇΩ
                  </td>
                  <td className="percentage-value">
                    <span className="formatted-number">{Number(campaign.cr || 0).toFixed(2)}</span>%
                  </td>
                  <td className={Number(campaign.roas || 0) > 2 ? 'profit-positive' : 'profit-negative'}>
                    <span className="formatted-number">{Number(campaign.roas || 0).toFixed(2)}</span>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    );
  };

  const renderABCAnalysisTable = () => {
    if (!analyticsData['abc-analysis']?.items) return null;
    
    return (
      <div className="abc-analysis table-container">
        <h2>üìã ABC-–∞–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–æ–≤</h2>
        <div className="table-scroll">
          <table>
            <thead>
              <tr>
                <th>–ü–æ–∑.</th>
                <th>–ê—Ä—Ç–∏–∫—É–ª</th>
                <th>–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞</th>
                <th>–ü—Ä–µ–¥–º–µ—Ç</th>
                <th>–ó–∞–∫–∞–∑—ã</th>
                <th>–°—Ä. —Ü–µ–Ω–∞</th>
                <th>–í—ã—Ä—É—á–∫–∞</th>
                <th>% –≥—Ä—É–ø–ø—ã</th>
                <th>–ö–ª–∞—Å—Å (–≥—Ä—É–ø–ø–∞)</th>
                <th>% –æ–±—â–∏–π</th>
                <th>–ö–ª–∞—Å—Å (–æ–±—â–∏–π)</th>
              </tr>
            </thead>
            <tbody>
              {analyticsData['abc-analysis'].items.map((item, index) => (
                <tr key={index}>
                  <td>{item.position}</td>
                  <td>{item.nmId}</td>
                  <td>{item.vendorCode}</td>
                  <td>{item.subject}</td>
                  <td>{item.ordersCount}</td>
                  <td>{item.avgPrice.toFixed(2)} ‚ÇΩ</td>
                  <td>{item.revenue.toFixed(2)} ‚ÇΩ</td>
                  <td>{item.revenuePercentInGroup.toFixed(1)}%</td>
                  <td><span className={`class-${item.classInGroup.toLowerCase()}`}>{item.classInGroup}</span></td>
                  <td>{item.revenuePercentTotal.toFixed(1)}%</td>
                  <td><span className={`class-${item.classTotal.toLowerCase()}`}>{item.classTotal}</span></td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    );
  };

  useEffect(() => {
    checkSubscriptionAndLoadData();
  }, []);

  useEffect(() => {
    console.log('üìã Analytics useEffect triggered:', {
      activeTab,
      hasSubscription,
      hasApiKey,
      shouldLoad: hasSubscription || hasApiKey
    });
    
    if (hasSubscription || hasApiKey) {
      console.log('üìã Calling loadAnalyticsData for:', activeTab);
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è –≥–æ–Ω–∫–∏
      setTimeout(() => {
        loadAnalyticsData(activeTab);
      }, 50);
    } else {
      console.log('üìã Not loading - no subscription or API key');
    }
  }, [activeTab, hasSubscription, hasApiKey]);

  if (loading && !hasSubscription && !hasApiKey) {
    return (
      <div className="analytics-page">
        <div className="container">
          <div className="loading-screen">
            <div className="loading-spinner"></div>
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...</p>
          </div>
        </div>
      </div>
    );
  }

  // –£–±–∏—Ä–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º
  // if (!hasSubscription) {
  //   return (
  //     <div className="analytics-page">
  //       <div className="container">
  //         <div className="subscription-required">
  //           <div className="requirement-icon">‚ö†Ô∏è</div>
  //           <h2 className="requirement-title">–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞</h2>
  //           <p className="requirement-description">
  //             –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
  //           </p>
  //           <Link to="/subscription" className="btn btn-primary">
  //             <span>üíé</span>
  //             –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
  //           </Link>
  //         </div>
  //       </div>
  //     </div>
  //   );
  // }

  // –£–±–∏—Ä–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º
  // if (!hasApiKey) {
  //   return (
  //     <div className="analytics-page">
  //       <div className="container">
  //         <div className="api-key-required">
  //           <div className="requirement-icon">üîë</div>
  //           <h2 className="requirement-title">–¢—Ä–µ–±—É–µ—Ç—Å—è API –∫–ª—é—á Wildberries</h2>
  //           <p className="requirement-description">
  //             –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å API –∫–ª—é—á –≤–∞—à–µ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ Wildberries.
  //           </p>
  //           
  //           <form onSubmit={handleSaveApiKey} className="api-key-form">
  //             {apiKeyError && (
  //               <div className="error-message">
  //                 <span className="error-icon">‚ùå</span>
  //                 {apiKeyError}
  //               </div>
  //             )}
  //             {apiKeySuccess && (
  //               <div className="success-message">
  //                 <span className="success-icon">‚úÖ</span>
  //                 {apiKeySuccess}
  //               </div>
  //             )}
  //             
  //             <div className="form-group">
  //               <label htmlFor="apiKey" className="form-label">API –∫–ª—é—á Wildberries</label>
  //               <input
  //                 type="text"
  //                 id="apiKey"
  //                 value={apiKeyInput}
  //                 onChange={(e) => setApiKeyInput(e.target.value)}
  //                 className="form-input"
  //                 placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á Wildberries"
  //                 required
  //               />
  //             </div>
  //             
  //             <button 
  //               type="submit" 
  //               className="btn btn-primary"
  //               disabled={apiKeySaving}
  //             >
  //               {apiKeySaving ? (
  //                 <>
  //                   <span className="loading-spinner-small"></span>
  //                   –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...
  //                 </>
  //               ) : (
  //                 <>
  //                   <span>üíæ</span>
  //                   –°–æ—Ö—Ä–∞–Ω–∏—Ç—å API –∫–ª—é—á
  //                 </>
  //               )}
  //             </button>
  //           </form>
  //           
  //           <div className="api-key-help">
  //             <p>
  //               –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è API –∫–ª—é—á–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤{' '}
  //               <a 
  //                 href="https://seller.wildberries.ru/supplier-settings/access-to-api" 
  //                 target="_blank" 
  //                 rel="noopener noreferrer"
  //                 className="help-link"
  //               >
  //                 –∫–∞–±–∏–Ω–µ—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞ Wildberries
  //               </a>
  //               {' '}–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á.
  //             </p>
  //           </div>
  //         </div>
  //       </div>
  //     </div>
  //   );
  // }

  if (error) {
    return (
      <div className="analytics-page">
        <div className="container">
          <div className="error-container">
            <div className="error-icon">‚ö†Ô∏è</div>
            <h2>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</h2>
            <p>{error}</p>
            <button 
              className="btn btn-primary"
              onClick={() => loadAnalyticsData(activeTab)}
            >
              <span>üîÑ</span>
              –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="analytics-page">
      <div className="container">
        {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ API –∫–ª—é—á–∞ */}
        {!hasSubscription && (
          <div className="warning-banner">
            <div className="warning-content">
              <span className="warning-icon">‚ö†Ô∏è</span>
              <span>–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ </span>
              <Link to="/subscription" className="warning-link">–æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É</Link>
            </div>
          </div>
        )}
        
        {hasSubscription && !hasApiKey && (
          <div className="warning-banner">
            <div className="warning-content">
              <span className="warning-icon">üîë</span>
              <span>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å API –∫–ª—é—á Wildberries –≤ </span>
              <Link to="/profile" className="warning-link">–ø—Ä–æ—Ñ–∏–ª–µ</Link>
            </div>
          </div>
        )}
        
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="analytics-header">
          <div className="header-text">
            <h1 className="page-title">
              <span className="title-icon">üìä</span>
              Wilberis Analytics
            </h1>
            <p className="page-subtitle">
              –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤–∞—à–∏—Ö –ø—Ä–æ–¥–∞–∂ –Ω–∞ Wildberries
            </p>
          </div>
          
          <div className="header-controls">
            <select className="analytics-select" value={activeTab} onChange={(e) => handleTabChange(e.target.value)}>
              <option value="financial">üìä –§–∏–Ω–∞–Ω—Å—ã</option>
              <option value="unit-economics">üí∞ –Æ–Ω–∏—Ç-—ç–∫–æ–Ω–æ–º–∏–∫–∞</option>
              <option value="advertising">üì¢ –†–µ–∫–ª–∞–º–∞</option>
              <option value="abc-analysis">üìã ABC-–∞–Ω–∞–ª–∏–∑</option>
            </select>
            
            <button 
              className="analytics-btn btn-primary"
              onClick={() => loadAnalyticsData(activeTab)}
              disabled={loading}
            >
              {loading ? '‚è≥' : 'üîÑ'} –û–±–Ω–æ–≤–∏—Ç—å
            </button>
            
            <div className="view-mode-toggle">
              <button
                className={`view-mode-btn ${viewMode === 'chart' ? 'view-mode-btn-active' : ''}`}
                onClick={() => setViewMode('chart')}
              >
                <span className="view-icon">üìä</span>
                –ì—Ä–∞—Ñ–∏–∫
              </button>
              <button
                className={`view-mode-btn ${viewMode === 'table' ? 'view-mode-btn-active' : ''}`}
                onClick={() => setViewMode('table')}
              >
                <span className="view-icon">üìã</span>
                –¢–∞–±–ª–∏—Ü–∞
              </button>
            </div>
          </div>
        </div>

        {/* –¢–∞–±—ã */}
        <div className="analytics-tabs">
          <button 
            className={`tab-button ${activeTab === 'financial' ? 'tab-button-active' : ''}`}
            onClick={() => handleTabChange('financial')}
          >
            <span className="tab-icon">üí∞</span>
            –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç
          </button>
          <button 
            className={`tab-button ${activeTab === 'unit-economics' ? 'tab-button-active' : ''}`}
            onClick={() => handleTabChange('unit-economics')}
          >
            <span className="tab-icon">üßÆ</span>
            –Æ–Ω–∏—Ç —ç–∫–æ–Ω–æ–º–∏–∫–∞
          </button>
          <button 
            className={`tab-button ${activeTab === 'advertising' ? 'tab-button-active' : ''}`}
            onClick={() => handleTabChange('advertising')}
          >
            <span className="tab-icon">üì¢</span>
            –†–µ–∫–ª–∞–º–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏
          </button>
          <button 
            className={`tab-button ${activeTab === 'abc-analysis' ? 'tab-button-active' : ''}`}
            onClick={() => handleTabChange('abc-analysis')}
          >
            <span className="tab-icon">üìã</span>
            ABC-–∞–Ω–∞–ª–∏–∑
          </button>
        </div>
        
        {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="analytics-content">
          {viewMode === 'chart' ? (
            <>
              {activeTab === 'financial' && renderFinancialCharts()}
              {activeTab === 'unit-economics' && renderUnitEconomicsCharts()}
              {activeTab === 'advertising' && renderAdvertisingCharts()}
              {activeTab === 'abc-analysis' && renderABCAnalysisCharts()}
            </>
          ) : (
            <>
              {activeTab === 'financial' && analyticsData.financial && (
                <>
                  {renderFinancialTable()}
                  <div className="content-divider"></div>
                </>
              )}
              {activeTab === 'unit-economics' && analyticsData['unit-economics'] && (
                <>
                  {renderUnitEconomicsTable()}
                  <div className="content-divider"></div>
                </>
              )}
              {activeTab === 'advertising' && analyticsData.advertising && (
                <>
                  {renderAdvertisingTable()}
                  <div className="content-divider"></div>
                </>
              )}
              {activeTab === 'abc-analysis' && analyticsData['abc-analysis'] && (
                <>
                  {renderABCAnalysisTable()}
                  <div className="content-divider"></div>
                </>
              )}
            </>
          )}
          
          {loading && (
            <div className="loading-screen">
              <div className="loading-spinner"></div>
              <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...</p>
            </div>
          )}
          
          {error && !analyticsData[activeTab] && (
            <div className="error-banner">
              <div className="warning-content">
                <span className="error-icon">‚ùå</span>
                <span>{error}</span>
              </div>
            </div>
          )}
          
          {!analyticsData[activeTab] && !loading && !error && (
            <div className="no-data">
              <div className="no-data-icon">üìä</div>
              <h3>–î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</h3>
              <p>–î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "{activeTab}" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è</p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default AnalyticsPage;